@model Shopping.Models.HomeViewModel

@{
    ViewData["Title"] = "Inicio";
}

<title>@ViewData["Title"]</title>

<flash itemprop="true" />

<style type="text/css">
    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border: 1px solid lightgray;
        box-shadow: 2px 2px 8px 4px #d3d3d3d1;
        border-radius: 15px;
        font-family: sans-serif;
        margin: 5px;
    }
</style>
<h3>Categorias</h3>

<div class="mb-2">
    @foreach (var item in Model.Categories)
    {
        <span>@item.Name&nbsp;&nbsp;</span>
    }
</div>


<div class="p-4">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" class="btn btn-lg btn-primary"><i class="fe fe-arrow-up-circle"></i> Nombre <i class="fe fe-arrow-down-circle"></i></a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" class="btn btn-lg btn-primary"><i class="fe fe-arrow-up-circle"></i> Precio <i class="fe fe-arrow-down-circle"></i></a>
</div>



<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Buscar por nombre o categoría: <input type="text" name="searchProduct" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-warning" />
            <a asp-action="Index" class="btn btn-success">Ver Todos los Productos</a>
        </p>
    </div>
</form>



@if (Model.Quantity > 0)
{
    <a asp-action="ShowCart" class="fe fe-shopping-cart btn btn-outline-primary"> (@Model.Quantity) </a>
}

<div class="row row-cols-1 row-cols-md-4 g-4 mt-1">
    @if (Model.Products.Count() > 0)
    {
        @foreach (var item in Model.Products)
        {
            <div class="col">
                <div class="card h-100">
                    <h2 class="text-center p-xl-3">@item.Name</h2>
                    <div class="text-center zoom">
                        <img src="@item.ImageFullPath" style="height:150px; max-width:200px;" class="text-center" alt=@item.Name />
                    </div>
                    <div class="card-body">
                        <p class="card-text smfnt">@item.Description</p>
                        <h5 class="text-muted">@Html.DisplayFor(modelItem => item.Price)</h5>
                    </div>
                    <div class="card-footer text-center">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Details</a>
                        <a asp-action="Add" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Add to Cart</a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <h3>No hay productos con su criterio de búsqueda</h3>
    }
</div>

@{
    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<div class="mt-4">
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
